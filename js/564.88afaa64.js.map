{"version":3,"file":"js/564.88afaa64.js","mappings":"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","sources":["webpack://mid-term-project/./src/views/DashboardLogs.vue?60c2","webpack://mid-term-project/./src/views/DashboardLogs.vue","webpack://mid-term-project/./src/views/DashboardLogs.vue?1ece","webpack://mid-term-project/./node_modules/core-js/modules/es.number.to-fixed.js"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"p-6\" }\nconst _hoisted_2 = { class: \"md:flex md:items-center md:justify-between mb-6\" }\nconst _hoisted_3 = { class: \"mt-4 flex space-x-3 md:mt-0\" }\nconst _hoisted_4 = { class: \"bg-white shadow overflow-hidden rounded-lg\" }\nconst _hoisted_5 = { class: \"min-w-full divide-y divide-gray-200\" }\nconst _hoisted_6 = { class: \"bg-white\" }\nconst _hoisted_7 = { class: \"max-h-[600px] overflow-auto\" }\nconst _hoisted_8 = { class: \"min-w-full divide-y divide-gray-200\" }\nconst _hoisted_9 = { class: \"bg-white divide-y divide-gray-200\" }\nconst _hoisted_10 = { class: \"px-6 py-4 whitespace-nowrap text-sm text-gray-500\" }\nconst _hoisted_11 = { class: \"px-6 py-4 whitespace-nowrap\" }\nconst _hoisted_12 = { class: \"px-6 py-4 text-sm text-gray-900\" }\nconst _hoisted_13 = { class: \"px-6 py-4 whitespace-nowrap text-sm text-gray-500\" }\nconst _hoisted_14 = { key: 0 }\n\nimport { ref, computed, onMounted } from 'vue';\r\n\r\ninterface Log {\r\n  id: number;\r\n  timestamp: Date;\r\n  type: 'info' | 'warning' | 'alert';\r\n  message: string;\r\n  value: string;\r\n}\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'DashboardLogs',\n  setup(__props) {\n\r\nconst filter = ref('all');\r\nconst logs = ref<Log[]>([]);\r\n\r\n// Generate sample logs\r\nconst generateSampleLogs = () => {\r\n  const sampleMessages = {\r\n    temperature: [\r\n      'Temperature above threshold',\r\n      'Temperature below threshold',\r\n      'Temperature normal',\r\n    ],\r\n    humidity: [\r\n      'Humidity above threshold',\r\n      'Humidity below threshold',\r\n      'Humidity normal',\r\n    ],\r\n    soilMoisture: [\r\n      'Soil moisture critical',\r\n      'Soil moisture low',\r\n      'Soil moisture optimal',\r\n    ],\r\n    lightLevel: [\r\n      'Light level too high',\r\n      'Light level too low',\r\n      'Light level optimal',\r\n    ],\r\n  };\r\n\r\n  const types: ('info' | 'warning' | 'alert')[] = ['info', 'warning', 'alert'];\r\n  const now = new Date();\r\n  const sampleLogs: Log[] = [];\r\n\r\n  for (let i = 0; i < 50; i++) {\r\n    const randomType = types[Math.floor(Math.random() * types.length)];\r\n    const category = ['temperature', 'humidity', 'soilMoisture', 'lightLevel'][\r\n      Math.floor(Math.random() * 4)\r\n    ];\r\n    const messages = sampleMessages[category as keyof typeof sampleMessages];\r\n    const randomMessage = messages[Math.floor(Math.random() * messages.length)];\r\n    \r\n    sampleLogs.push({\r\n      id: i,\r\n      timestamp: new Date(now.getTime() - Math.random() * 24 * 60 * 60 * 1000),\r\n      type: randomType,\r\n      message: randomMessage,\r\n      value: randomType === 'info' \r\n        ? 'Normal range'\r\n        : `${(20 + Math.random() * 10).toFixed(1)}°C`\r\n    });\r\n  }\r\n\r\n  return sampleLogs.sort((a, b) => b.timestamp.getTime() - a.timestamp.getTime());\r\n};\r\n\r\nconst filteredLogs = computed(() => {\r\n  if (filter.value === 'all') return logs.value;\r\n  return logs.value.filter(log => log.type === filter.value);\r\n});\r\n\r\nconst formatDate = (date: Date) => {\r\n  return new Intl.DateTimeFormat('en-US', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: '2-digit',\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n    second: '2-digit'\r\n  }).format(date);\r\n};\r\n\r\nconst getTypeClass = (type: string) => {\r\n  const baseClasses = 'px-2 inline-flex text-xs leading-5 font-semibold rounded-full';\r\n  switch (type) {\r\n    case 'alert':\r\n      return `${baseClasses} bg-red-100 text-red-800`;\r\n    case 'warning':\r\n      return `${baseClasses} bg-yellow-100 text-yellow-800`;\r\n    default:\r\n      return `${baseClasses} bg-green-100 text-green-800`;\r\n  }\r\n};\r\n\r\nconst getRowColor = (type: string) => {\r\n  switch (type) {\r\n    case 'alert':\r\n      return 'bg-red-50 hover:bg-red-100';\r\n    case 'warning':\r\n      return 'bg-yellow-50 hover:bg-yellow-100';\r\n    default:\r\n      return 'hover:bg-gray-50';\r\n  }\r\n};\r\n\r\nconst exportLogs = () => {\r\n  const data = JSON.stringify(filteredLogs.value, null, 2);\r\n  const blob = new Blob([data], { type: 'application/json' });\r\n  const url = URL.createObjectURL(blob);\r\n  const a = document.createElement('a');\r\n  a.href = url;\r\n  a.download = `greenhouse-logs-${new Date().toISOString()}.json`;\r\n  document.body.appendChild(a);\r\n  a.click();\r\n  document.body.removeChild(a);\r\n  URL.revokeObjectURL(url);\r\n};\r\n\r\nconst clearLogs = () => {\r\n  if (confirm('Are you sure you want to clear all logs?')) {\r\n    logs.value = [];\r\n  }\r\n};\r\n\r\n// Add new log entry\r\nconst addLog = (type: 'info' | 'warning' | 'alert', message: string, value: string) => {\r\n  logs.value.unshift({\r\n    id: Date.now(),\r\n    timestamp: new Date(),\r\n    type,\r\n    message,\r\n    value\r\n  });\r\n};\r\n\r\n// Initialize logs\r\nonMounted(() => {\r\n  logs.value = generateSampleLogs();\r\n\r\n  // Simulate real-time logs\r\n  setInterval(() => {\r\n    const types: ('info' | 'warning' | 'alert')[] = ['info', 'warning', 'alert'];\r\n    const randomType = types[Math.floor(Math.random() * types.length)];\r\n    const messages = [\r\n      'Temperature check',\r\n      'Humidity check',\r\n      'Soil moisture check',\r\n      'Light level check'\r\n    ];\r\n    const randomMessage = messages[Math.floor(Math.random() * messages.length)];\r\n    addLog(randomType, randomMessage, `${(20 + Math.random() * 10).toFixed(1)}°C`);\r\n  }, 10000);\r\n});\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _cache[2] || (_cache[2] = _createElementVNode(\"h2\", { class: \"text-2xl font-bold text-gray-900\" }, \"System Logs\", -1)),\n      _createElementVNode(\"div\", _hoisted_3, [\n        _withDirectives(_createElementVNode(\"select\", {\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((filter).value = $event)),\n          class: \"rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n        }, _cache[1] || (_cache[1] = [\n          _createElementVNode(\"option\", { value: \"all\" }, \"All Events\", -1),\n          _createElementVNode(\"option\", { value: \"alert\" }, \"Alerts\", -1),\n          _createElementVNode(\"option\", { value: \"warning\" }, \"Warnings\", -1),\n          _createElementVNode(\"option\", { value: \"info\" }, \"Info\", -1)\n        ]), 512), [\n          [_vModelSelect, filter.value]\n        ]),\n        _createElementVNode(\"button\", {\n          onClick: clearLogs,\n          class: \"inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50\"\n        }, \" Clear Logs \"),\n        _createElementVNode(\"button\", {\n          onClick: exportLogs,\n          class: \"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700\"\n        }, \" Export Logs \")\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_4, [\n      _createElementVNode(\"div\", _hoisted_5, [\n        _createElementVNode(\"div\", _hoisted_6, [\n          _createElementVNode(\"div\", _hoisted_7, [\n            _createElementVNode(\"table\", _hoisted_8, [\n              _cache[4] || (_cache[4] = _createElementVNode(\"thead\", { class: \"bg-gray-50 sticky top-0\" }, [\n                _createElementVNode(\"tr\", null, [\n                  _createElementVNode(\"th\", {\n                    scope: \"col\",\n                    class: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\"\n                  }, \" Timestamp \"),\n                  _createElementVNode(\"th\", {\n                    scope: \"col\",\n                    class: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\"\n                  }, \" Type \"),\n                  _createElementVNode(\"th\", {\n                    scope: \"col\",\n                    class: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\"\n                  }, \" Message \"),\n                  _createElementVNode(\"th\", {\n                    scope: \"col\",\n                    class: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\"\n                  }, \" Value \")\n                ])\n              ], -1)),\n              _createElementVNode(\"tbody\", _hoisted_9, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(filteredLogs.value, (log) => {\n                  return (_openBlock(), _createElementBlock(\"tr\", {\n                    key: log.id,\n                    class: _normalizeClass(getRowColor(log.type))\n                  }, [\n                    _createElementVNode(\"td\", _hoisted_10, _toDisplayString(formatDate(log.timestamp)), 1),\n                    _createElementVNode(\"td\", _hoisted_11, [\n                      _createElementVNode(\"span\", {\n                        class: _normalizeClass(getTypeClass(log.type))\n                      }, _toDisplayString(log.type), 3)\n                    ]),\n                    _createElementVNode(\"td\", _hoisted_12, _toDisplayString(log.message), 1),\n                    _createElementVNode(\"td\", _hoisted_13, _toDisplayString(log.value), 1)\n                  ], 2))\n                }), 128)),\n                (filteredLogs.value.length === 0)\n                  ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_14, _cache[3] || (_cache[3] = [\n                      _createElementVNode(\"td\", {\n                        colspan: \"4\",\n                        class: \"px-6 py-4 text-center text-sm text-gray-500\"\n                      }, \" No logs found \", -1)\n                    ])))\n                  : _createCommentVNode(\"\", true)\n              ])\n            ])\n          ])\n        ])\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"p-6\">\r\n    <div class=\"md:flex md:items-center md:justify-between mb-6\">\r\n      <h2 class=\"text-2xl font-bold text-gray-900\">System Logs</h2>\r\n      <div class=\"mt-4 flex space-x-3 md:mt-0\">\r\n        <select \r\n          v-model=\"filter\" \r\n          class=\"rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n        >\r\n          <option value=\"all\">All Events</option>\r\n          <option value=\"alert\">Alerts</option>\r\n          <option value=\"warning\">Warnings</option>\r\n          <option value=\"info\">Info</option>\r\n        </select>\r\n        <button \r\n          @click=\"clearLogs\"\r\n          class=\"inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50\"\r\n        >\r\n          Clear Logs\r\n        </button>\r\n        <button \r\n          @click=\"exportLogs\"\r\n          class=\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700\"\r\n        >\r\n          Export Logs\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Logs Table -->\r\n    <div class=\"bg-white shadow overflow-hidden rounded-lg\">\r\n      <div class=\"min-w-full divide-y divide-gray-200\">\r\n        <div class=\"bg-white\">\r\n          <div class=\"max-h-[600px] overflow-auto\">\r\n            <table class=\"min-w-full divide-y divide-gray-200\">\r\n              <thead class=\"bg-gray-50 sticky top-0\">\r\n                <tr>\r\n                  <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\r\n                    Timestamp\r\n                  </th>\r\n                  <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\r\n                    Type\r\n                  </th>\r\n                  <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\r\n                    Message\r\n                  </th>\r\n                  <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\r\n                    Value\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody class=\"bg-white divide-y divide-gray-200\">\r\n                <tr v-for=\"log in filteredLogs\" :key=\"log.id\" :class=\"getRowColor(log.type)\">\r\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                    {{ formatDate(log.timestamp) }}\r\n                  </td>\r\n                  <td class=\"px-6 py-4 whitespace-nowrap\">\r\n                    <span :class=\"getTypeClass(log.type)\">\r\n                      {{ log.type }}\r\n                    </span>\r\n                  </td>\r\n                  <td class=\"px-6 py-4 text-sm text-gray-900\">\r\n                    {{ log.message }}\r\n                  </td>\r\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                    {{ log.value }}\r\n                  </td>\r\n                </tr>\r\n                <tr v-if=\"filteredLogs.length === 0\">\r\n                  <td colspan=\"4\" class=\"px-6 py-4 text-center text-sm text-gray-500\">\r\n                    No logs found\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, computed, onMounted } from 'vue';\r\n\r\ninterface Log {\r\n  id: number;\r\n  timestamp: Date;\r\n  type: 'info' | 'warning' | 'alert';\r\n  message: string;\r\n  value: string;\r\n}\r\n\r\nconst filter = ref('all');\r\nconst logs = ref<Log[]>([]);\r\n\r\n// Generate sample logs\r\nconst generateSampleLogs = () => {\r\n  const sampleMessages = {\r\n    temperature: [\r\n      'Temperature above threshold',\r\n      'Temperature below threshold',\r\n      'Temperature normal',\r\n    ],\r\n    humidity: [\r\n      'Humidity above threshold',\r\n      'Humidity below threshold',\r\n      'Humidity normal',\r\n    ],\r\n    soilMoisture: [\r\n      'Soil moisture critical',\r\n      'Soil moisture low',\r\n      'Soil moisture optimal',\r\n    ],\r\n    lightLevel: [\r\n      'Light level too high',\r\n      'Light level too low',\r\n      'Light level optimal',\r\n    ],\r\n  };\r\n\r\n  const types: ('info' | 'warning' | 'alert')[] = ['info', 'warning', 'alert'];\r\n  const now = new Date();\r\n  const sampleLogs: Log[] = [];\r\n\r\n  for (let i = 0; i < 50; i++) {\r\n    const randomType = types[Math.floor(Math.random() * types.length)];\r\n    const category = ['temperature', 'humidity', 'soilMoisture', 'lightLevel'][\r\n      Math.floor(Math.random() * 4)\r\n    ];\r\n    const messages = sampleMessages[category as keyof typeof sampleMessages];\r\n    const randomMessage = messages[Math.floor(Math.random() * messages.length)];\r\n    \r\n    sampleLogs.push({\r\n      id: i,\r\n      timestamp: new Date(now.getTime() - Math.random() * 24 * 60 * 60 * 1000),\r\n      type: randomType,\r\n      message: randomMessage,\r\n      value: randomType === 'info' \r\n        ? 'Normal range'\r\n        : `${(20 + Math.random() * 10).toFixed(1)}°C`\r\n    });\r\n  }\r\n\r\n  return sampleLogs.sort((a, b) => b.timestamp.getTime() - a.timestamp.getTime());\r\n};\r\n\r\nconst filteredLogs = computed(() => {\r\n  if (filter.value === 'all') return logs.value;\r\n  return logs.value.filter(log => log.type === filter.value);\r\n});\r\n\r\nconst formatDate = (date: Date) => {\r\n  return new Intl.DateTimeFormat('en-US', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: '2-digit',\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n    second: '2-digit'\r\n  }).format(date);\r\n};\r\n\r\nconst getTypeClass = (type: string) => {\r\n  const baseClasses = 'px-2 inline-flex text-xs leading-5 font-semibold rounded-full';\r\n  switch (type) {\r\n    case 'alert':\r\n      return `${baseClasses} bg-red-100 text-red-800`;\r\n    case 'warning':\r\n      return `${baseClasses} bg-yellow-100 text-yellow-800`;\r\n    default:\r\n      return `${baseClasses} bg-green-100 text-green-800`;\r\n  }\r\n};\r\n\r\nconst getRowColor = (type: string) => {\r\n  switch (type) {\r\n    case 'alert':\r\n      return 'bg-red-50 hover:bg-red-100';\r\n    case 'warning':\r\n      return 'bg-yellow-50 hover:bg-yellow-100';\r\n    default:\r\n      return 'hover:bg-gray-50';\r\n  }\r\n};\r\n\r\nconst exportLogs = () => {\r\n  const data = JSON.stringify(filteredLogs.value, null, 2);\r\n  const blob = new Blob([data], { type: 'application/json' });\r\n  const url = URL.createObjectURL(blob);\r\n  const a = document.createElement('a');\r\n  a.href = url;\r\n  a.download = `greenhouse-logs-${new Date().toISOString()}.json`;\r\n  document.body.appendChild(a);\r\n  a.click();\r\n  document.body.removeChild(a);\r\n  URL.revokeObjectURL(url);\r\n};\r\n\r\nconst clearLogs = () => {\r\n  if (confirm('Are you sure you want to clear all logs?')) {\r\n    logs.value = [];\r\n  }\r\n};\r\n\r\n// Add new log entry\r\nconst addLog = (type: 'info' | 'warning' | 'alert', message: string, value: string) => {\r\n  logs.value.unshift({\r\n    id: Date.now(),\r\n    timestamp: new Date(),\r\n    type,\r\n    message,\r\n    value\r\n  });\r\n};\r\n\r\n// Initialize logs\r\nonMounted(() => {\r\n  logs.value = generateSampleLogs();\r\n\r\n  // Simulate real-time logs\r\n  setInterval(() => {\r\n    const types: ('info' | 'warning' | 'alert')[] = ['info', 'warning', 'alert'];\r\n    const randomType = types[Math.floor(Math.random() * types.length)];\r\n    const messages = [\r\n      'Temperature check',\r\n      'Humidity check',\r\n      'Soil moisture check',\r\n      'Light level check'\r\n    ];\r\n    const randomMessage = messages[Math.floor(Math.random() * messages.length)];\r\n    addLog(randomType, randomMessage, `${(20 + Math.random() * 10).toFixed(1)}°C`);\r\n  }, 10000);\r\n});\r\n</script>\r\n","import script from \"./DashboardLogs.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./DashboardLogs.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar thisNumberValue = require('../internals/this-number-value');\nvar $repeat = require('../internals/string-repeat');\nvar fails = require('../internals/fails');\n\nvar $RangeError = RangeError;\nvar $String = String;\nvar floor = Math.floor;\nvar repeat = uncurryThis($repeat);\nvar stringSlice = uncurryThis(''.slice);\nvar nativeToFixed = uncurryThis(1.0.toFixed);\n\nvar pow = function (x, n, acc) {\n  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);\n};\n\nvar log = function (x) {\n  var n = 0;\n  var x2 = x;\n  while (x2 >= 4096) {\n    n += 12;\n    x2 /= 4096;\n  }\n  while (x2 >= 2) {\n    n += 1;\n    x2 /= 2;\n  } return n;\n};\n\nvar multiply = function (data, n, c) {\n  var index = -1;\n  var c2 = c;\n  while (++index < 6) {\n    c2 += n * data[index];\n    data[index] = c2 % 1e7;\n    c2 = floor(c2 / 1e7);\n  }\n};\n\nvar divide = function (data, n) {\n  var index = 6;\n  var c = 0;\n  while (--index >= 0) {\n    c += data[index];\n    data[index] = floor(c / n);\n    c = (c % n) * 1e7;\n  }\n};\n\nvar dataToString = function (data) {\n  var index = 6;\n  var s = '';\n  while (--index >= 0) {\n    if (s !== '' || index === 0 || data[index] !== 0) {\n      var t = $String(data[index]);\n      s = s === '' ? t : s + repeat('0', 7 - t.length) + t;\n    }\n  } return s;\n};\n\nvar FORCED = fails(function () {\n  return nativeToFixed(0.00008, 3) !== '0.000' ||\n    nativeToFixed(0.9, 0) !== '1' ||\n    nativeToFixed(1.255, 2) !== '1.25' ||\n    nativeToFixed(1000000000000000128.0, 0) !== '1000000000000000128';\n}) || !fails(function () {\n  // V8 ~ Android 4.3-\n  nativeToFixed({});\n});\n\n// `Number.prototype.toFixed` method\n// https://tc39.es/ecma262/#sec-number.prototype.tofixed\n$({ target: 'Number', proto: true, forced: FORCED }, {\n  toFixed: function toFixed(fractionDigits) {\n    var number = thisNumberValue(this);\n    var fractDigits = toIntegerOrInfinity(fractionDigits);\n    var data = [0, 0, 0, 0, 0, 0];\n    var sign = '';\n    var result = '0';\n    var e, z, j, k;\n\n    // TODO: ES2018 increased the maximum number of fraction digits to 100, need to improve the implementation\n    if (fractDigits < 0 || fractDigits > 20) throw new $RangeError('Incorrect fraction digits');\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (number !== number) return 'NaN';\n    if (number <= -1e21 || number >= 1e21) return $String(number);\n    if (number < 0) {\n      sign = '-';\n      number = -number;\n    }\n    if (number > 1e-21) {\n      e = log(number * pow(2, 69, 1)) - 69;\n      z = e < 0 ? number * pow(2, -e, 1) : number / pow(2, e, 1);\n      z *= 0x10000000000000;\n      e = 52 - e;\n      if (e > 0) {\n        multiply(data, 0, z);\n        j = fractDigits;\n        while (j >= 7) {\n          multiply(data, 1e7, 0);\n          j -= 7;\n        }\n        multiply(data, pow(10, j, 1), 0);\n        j = e - 1;\n        while (j >= 23) {\n          divide(data, 1 << 23);\n          j -= 23;\n        }\n        divide(data, 1 << j);\n        multiply(data, 1, 1);\n        divide(data, 2);\n        result = dataToString(data);\n      } else {\n        multiply(data, 0, z);\n        multiply(data, 1 << -e, 0);\n        result = dataToString(data) + repeat('0', fractDigits);\n      }\n    }\n    if (fractDigits > 0) {\n      k = result.length;\n      result = sign + (k <= fractDigits\n        ? '0.' + repeat('0', fractDigits - k) + result\n        : stringSlice(result, 0, k - fractDigits) + '.' + stringSlice(result, k - fractDigits));\n    } else {\n      result = sign + result;\n    } return result;\n  }\n});\n"],"names":["_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","key","_defineComponent","__name","setup","__props","filter","ref","logs","generateSampleLogs","sampleMessages","temperature","humidity","soilMoisture","lightLevel","types","now","Date","sampleLogs","i","randomType","Math","floor","random","length","category","messages","randomMessage","push","id","timestamp","getTime","type","message","value","concat","toFixed","sort","a","b","filteredLogs","computed","log","formatDate","date","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","getTypeClass","baseClasses","getRowColor","exportLogs","data","JSON","stringify","blob","Blob","url","URL","createObjectURL","document","createElement","href","download","toISOString","body","appendChild","click","removeChild","revokeObjectURL","clearLogs","confirm","addLog","unshift","onMounted","setInterval","_ctx","_cache","_openBlock","_createElementBlock","_createElementVNode","_withDirectives","$event","_vModelSelect","onClick","scope","_Fragment","_renderList","_normalizeClass","_toDisplayString","colspan","_createCommentVNode","__exports__","$","uncurryThis","toIntegerOrInfinity","thisNumberValue","$repeat","fails","$RangeError","RangeError","$String","String","repeat","stringSlice","slice","nativeToFixed","pow","x","n","acc","x2","multiply","c","index","c2","divide","dataToString","s","t","FORCED","target","proto","forced","fractionDigits","e","z","j","k","number","this","fractDigits","sign","result"],"sourceRoot":""}